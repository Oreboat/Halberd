cmake_minimum_required(VERSION 3.24)

# Set the project name
project(Halberd)

# Enable FetchContent
include(FetchContent)

# Fetch GLFW
FetchContent_Declare(
    GLFW
    GIT_REPOSITORY https://github.com/glfw/glfw.git
    GIT_TAG 3.4
)

FetchContent_Declare(
    SDL
    GIT_REPOSITORY https://github.com/libsdl-org/SDL.git
    GIT_TAG release-3.2.10
)

FetchContent_MakeAvailable(SDL)

FetchContent_MakeAvailable(GLFW)

# Set the C standard to C99
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED True)

# Find Vulkan
find_package(Vulkan REQUIRED)

# Manually specify source files
set(SOURCES   
    main/main.c
)

# Add the executable
add_executable(Halberd ${SOURCES})


# Enable all warnings and treat them as errors
if (CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
    target_compile_options(Halberd PRIVATE -Wall -Wextra -Werror)
elseif (CMAKE_C_COMPILER_ID STREQUAL "MSVC")
    target_compile_options(Halberd PRIVATE /W4 /WX)
endif()

# Include project directories
target_include_directories(Halberd PRIVATE 
    core 
    modules 
    main 
    ${Vulkan_INCLUDE_DIRS}
)

# Link GLFW and Vulkan
target_link_libraries(Halberd PRIVATE glfw Vulkan::Vulkan)

# Add Vulkan library paths
target_link_directories(Halberd PRIVATE ${Vulkan_LIBRARY_DIRS})

# Ensure Vulkan loader is linked if necessary
if (Vulkan_FOUND AND Vulkan_LIBRARIES)
    target_link_libraries(Halberd PRIVATE ${Vulkan_LIBRARIES})
endif()

add_custom_command(TARGET Halberd POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E echo "Building Halberd editor..."
    COMMAND cargo build
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/editor
)

